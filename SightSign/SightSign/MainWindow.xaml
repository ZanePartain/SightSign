<Window x:Class="SightSign.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sightSign="clr-namespace:SightSign"
    mc:Ignorable="d"
    Title="Sight Sign" 
    Height="480" 
    Width="640"
    KeyDown="Window_KeyDown"
    MouseWheel="Window_MouseWheel"
    Loaded="MainWindow_OnLoaded"
    Closing="MainWindow_OnClosing">

    <Window.Resources>

        <sightSign:ArmConnectedToContentConverter x:Key="ArmConnectedToContentConverter"/>
        <sightSign:ArmConnectedToHelpTextConverter x:Key="ArmConnectedToHelpTextConverter"/>
        <sightSign:ArmStateToDotFillConverter x:Key="ArmStateToDotFillConverter"/>
        <sightSign:ArmStateToDotWidthConverter x:Key="ArmStateToDotWidthConverter"/>
        <sightSign:ColorToSolidBrushConverter x:Key="ColorToSolidBrushConverter"/>


        <!-- Style for the big round buttons shown in the app. -->
        <Style x:Key="SimpleButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
            <Setter Property="FontSize" Value="32"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="Grid">
                            <Ellipse 
                                Width="120" 
                                Height="120" 
                                Fill="{Binding ButtonBackgroundColor,
                                    Converter={StaticResource ColorToSolidBrushConverter}}"
                                Stroke="{Binding ButtonBorderColor,
                                    Converter={StaticResource ColorToSolidBrushConverter}}"
                                StrokeThickness="{Binding ButtonBorderWidth}" />
                            <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Margin="{TemplateBinding Padding}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsKeyboardFocused" Value="True">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Grid x:Name="Grid">
                                    <Ellipse 
                                        Width="120" 
                                        Height="120" 
                                        Fill="{Binding ButtonBackgroundColor,
                                            Converter={StaticResource ColorToSolidBrushConverter}}"
                                        Stroke="{Binding ButtonBorderColor,
                                            Converter={StaticResource ColorToSolidBrushConverter}}"
                                        StrokeThickness="6" />
                                    <ContentPresenter
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Margin="{TemplateBinding Padding}" />
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Border x:Name="mainWindowBorder" BorderThickness="8">
        <!-- The text to show the current area for the drawing zone -->
        <!-- The main app area. -->
        <Grid Margin="40">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <!-- The column of big round buttons down the left side of the app. -->
            <Grid
                x:Name="NavGrid"
                HorizontalAlignment="Left"
                Background="Transparent">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>

                <!-- The Write and Stamp and Area buttons. -->
                <sightSign:CircularGazeButton x:Name="StampButton"
                    Foreground="{Binding ButtonTextColor,
                        Converter={StaticResource ColorToSolidBrushConverter}}"
                    Radius="60"
                    GazeClick="StampButton_Click"
                    ButtonText="Stamp"
                    SegmentColor="Black"
                    StrokeThickness="5"
                    Margin="0,0,0,15"/>

                <sightSign:CircularGazeButton Grid.Row="1"
                    x:Name="WriteButton"
                    Foreground="{Binding ButtonTextColor,
                        Converter={StaticResource ColorToSolidBrushConverter}}"
                    Radius="60"
                    GazeClick="WriteButton_Click"
                    ButtonText="Write"
                    SegmentColor="Black"
                    StrokeThickness="5"
                    Margin="0,0,0,15"/>

                <sightSign:CircularGazeButton Grid.Row="2"
                    x:Name="AreaButton"
                    Foreground="{Binding ButtonTextColor,
                        Converter={StaticResource ColorToSolidBrushConverter}}"
                    Radius="60"
                    ButtonText="Area" 
                    SegmentColor="Black"
                    StrokeThickness="5"
                    GazeClick="AreaButton_Click"
                    Margin="0,0,0,40" />

                <!-- The buttons related to increasing or decreasing the Drawing Area 
                 Only displayed when the are button is clicked -->
                <sightSign:CircularGazeButton
                    x:Name="IncreaseDrawingAreaButton"
                    Visibility="Collapsed"
                    Foreground="{Binding ButtonTextColor,
                        Converter={StaticResource ColorToSolidBrushConverter}}"
                    ButtonText="+" 
                    Radius="60"
                    SegmentColor="Black"
                    StrokeThickness="5"
                    GazeClick="AdjustDrawingAreaButton_Click" 
                    Margin="0,0,0,15" />
                <sightSign:CircularGazeButton Grid.Row="1"
                    x:Name="DecreaseDrawingAreaButton"
                    Visibility="Collapsed"
                    Foreground="{Binding ButtonTextColor,
                        Converter={StaticResource ColorToSolidBrushConverter}}"
                    Radius="60"
                    SegmentColor="Black"
                    StrokeThickness="5"
                    ButtonText="-" 
                    GazeClick="AdjustDrawingAreaButton_Click"
                    Margin="0,0,0,15" />
                <sightSign:CircularGazeButton Grid.Row="2"
                    x:Name="DrawAreaButton"
                    Visibility="Collapsed"
                    Foreground="{Binding ButtonTextColor,
                        Converter={StaticResource ColorToSolidBrushConverter}}"
                    Radius="60"
                    SegmentColor="Black"
                    StrokeThickness="5"
                    ButtonText="Draw" 
                    GazeClick="DrawAreaButton_Click" 
                    Margin="0,0,0,40" />
                <sightSign:CircularGazeButton Grid.Row="4"
                    x:Name="DoneDrawingAreaButton"
                    Visibility="Collapsed"
                    Foreground="{Binding ButtonTextColor,
                        Converter={StaticResource ColorToSolidBrushConverter}}"
                    Radius="60"
                    SegmentColor="Black"
                    StrokeThickness="5"
                    ButtonText="Done" 
                    GazeClick="AreaButton_Click" 
                    />


                <!-- The inking-related Clear, Save and Load buttons. -->
                <sightSign:CircularGazeButton Grid.Row="0"
                    x:Name="ClearButton"
                    Visibility="Collapsed"
                    Foreground="{Binding ButtonTextColor,
                        Converter={StaticResource ColorToSolidBrushConverter}}"
                    Radius="60"
                    GazeClick="ClearButton_Click"
                    ButtonText="Clear"
                    SegmentColor="Black"
                    StrokeThickness="5"
                    Margin="0,0,0,15"/>

                <sightSign:CircularGazeButton Grid.Row="1"
                    x:Name="SaveButton"
                    Visibility="Collapsed"
                    Foreground="{Binding ButtonTextColor,
                        Converter={StaticResource ColorToSolidBrushConverter}}"
                    Radius="60"
                    GazeClick="SaveButton_Click"
                    ButtonText="Save"
                    SegmentColor="Black"
                    StrokeThickness="5"
                    Margin="0,0,0,15"/>

                <sightSign:CircularGazeButton Grid.Row="2"
                    x:Name="LoadButton"
                    Visibility="Collapsed"
                    Foreground="{Binding ButtonTextColor,
                        Converter={StaticResource ColorToSolidBrushConverter}}"
                    Radius="60"
                    GazeClick="LoadButton_Click"
                    ButtonText="Load"
                    SegmentColor="Black"
                    StrokeThickness="5"
                    Margin="0,0,0,40"/>

                <!-- The Edit/Done button. -->
                <sightSign:CircularGazeButton Grid.Row="4"
                    x:Name="EditButton"
                    Foreground="{Binding ButtonTextColor,
                        Converter={StaticResource ColorToSolidBrushConverter}}"
                    Radius="60"
                    GazeClick="EditButton_Click"
                    ButtonText="Edit"
                    SegmentColor="Black"
                    StrokeThickness="5"
                    />
            </Grid>

            <!--Signature Bank Grid that will display when the user selects Load.-->
            <Grid
                x:Name="SigBank"
                Grid.Column="1" Grid.ColumnSpan="2"
                Width="900"
                Height="600"
                Background="Coral"
                Panel.ZIndex="1"
                Visibility="Collapsed"
                VerticalAlignment="Center" 
                HorizontalAlignment="Center"
            >
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
            </Grid>

            <!-- The main area showing the ink and animating dot. -->
            <Grid x:Name="canvas" Grid.Column="1" Grid.ColumnSpan="2">

                <Grid x:Name="canvasBackground">
                    <Grid.Background>
                        <ImageBrush x:Name="backGroundd" Opacity="0.4" />
                    </Grid.Background>
                </Grid>

                <!-- The InkCanvas showing the default ink of the ink drawn by the user. -->
                <InkCanvas 
                AutomationProperties.Name="Background ink canvas"
                x:Name="inkCanvas" 
                Background="Transparent"
                IsEnabled="False" />

                <!-- The InkCanvas showing the ink as it's being traced out. -->
                <InkCanvas 
                AutomationProperties.Name="Tracing ink canvas"
                x:Name="inkCanvasAnimations" 
                Background="Transparent"
                IsHitTestVisible="True"
                IsEnabled="False" 
                Visibility="Collapsed" />

                <!-- The animating dot which runs along the ink. -->
                <Button 
                    x:Name="dot"
                    AutomationProperties.Name="Dot"
                    Visibility="Collapsed"
                    Width="{Binding Arm.ArmIsDown,
                        Converter={StaticResource ArmStateToDotWidthConverter}}"
                    Height="{Binding Arm.ArmIsDown,
                        Converter={StaticResource ArmStateToDotWidthConverter}}"
                    HorizontalAlignment="Center" 
                    VerticalAlignment="Center"
                    Click="Dot_OnClick">

                    <Button.RenderTransform>
                        <TranslateTransform x:Name="dotTranslateTransform"/>
                    </Button.RenderTransform>

                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Ellipse 
                                        Width="{Binding Arm.ArmIsDown,
                                            Converter={StaticResource ArmStateToDotWidthConverter}}"
                                        Height="{Binding Arm.ArmIsDown,
                                            Converter={StaticResource ArmStateToDotWidthConverter}}"
                                        Fill="{Binding ButtonBackgroundColor,
                                            Converter={StaticResource ColorToSolidBrushConverter}}"
                                        Stroke="{Binding ButtonTextColor,
                                            Converter={StaticResource ColorToSolidBrushConverter}}"
                                        StrokeThickness="1" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Grid x:Name="Grid">
                                                    <Ellipse 
                                                    Width="{Binding Arm.ArmIsDown,
                                                        Converter={StaticResource ArmStateToDotWidthConverter}}"
                                                    Height="{Binding Arm.ArmIsDown,
                                                        Converter={StaticResource ArmStateToDotWidthConverter}}"
                                                    Fill="{Binding ButtonBackgroundColor,
                                                        Converter={StaticResource ColorToSolidBrushConverter}}"
                                                    Stroke="{Binding ButtonBorderColor,
                                                        Converter={StaticResource ColorToSolidBrushConverter}}"
                                                    StrokeThickness="2" />
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>

            <!-- A grid column showing the Settings button at the right of the window. -->
            <Grid Grid.Column="2" x:Name="settingsGrid">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>
                <sightSign:CircularGazeButton Grid.Row="1"
                    x:Name="SettingsButton"
                    AutomationProperties.Name="Settings"
                    AutomationProperties.HelpText="{Binding Arm.Connected,
                        Converter={StaticResource ArmConnectedToHelpTextConverter}}"
                    Foreground="{Binding ButtonTextColor,
                        Converter={StaticResource ColorToSolidBrushConverter}}"
                    Radius="60"
                    GazeClick="SettingsButton_Click"
                    ButtonText="{Binding Arm.Connected,
                        Converter={StaticResource ArmConnectedToContentConverter}}"
                    SegmentColor="Black"
                    StrokeThickness="5"        
                    FontFamily="Segoe MDL2 Assets"
                    FontSize="48"
                    Margin="0,0,0,20"/>

                <TextBlock 
                    x:Name="areaText" 
                    HorizontalAlignment="Right" 
                    VerticalAlignment="Top"
                    FontSize="25" 
                    Foreground="AntiqueWhite"
                    Padding="0" 
                    Margin="0,-10,0,0" 
                    Height="auto" 
                    Width="auto" 
                    Text="" />
                <Button
                  x:Name="ImportButton"
                  Visibility="Collapsed"
                  Height="50"
                  Width="50"
                  HorizontalAlignment="Right"
                  VerticalAlignment="Top"
                  Click="ImportButton_Click">
                    <!--<Image Source="/Icons/Import.jpg"/>-->
                </Button>
            </Grid>
        </Grid>
    </Border>

</Window>
